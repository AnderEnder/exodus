defaults: &defaults
  working_directory: ~/exodus
  docker:
    - image: circleci/python:3.6.1


version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "development-requirements.txt" }}
          - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
            python3 -m venv .env
            . .env/bin/activate
            pip install -r development-requirements.txt
            sudo apt-get install gcc musl musl-tools patchelf python-dev strace
      - save_cache:
          paths:
            - ./.env
          key: v1-dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "development-requirements.txt" }}

      - run:
          name: Run the tests.
          command: |
            . .env/bin/activate
            exit
            tox
            echo "{ \"coverage\": \"$(coverage report | tail -n 1 | awk '{print $6}')\" }" > htmlcov/total-coverage.json

      - run:
          name: Build the package.
          command: |
            python setup.py sdist bdist_wheel

      - run:
          name: Build Self-Hosted Bundle
          command: |
            sudo apt-get install python-pip
            sudo pip2 install .
            (cat <<EOF > musl-gcc
            #!/bin/sh

            current_directory="\$(dirname "\$(readlink -f "\$0")")"

            exec \${current_directory}/gcc "\$@" -nostdinc -nostdlib -I\${current_directory}/../../usr/include/x86_64-linux-musl -L\${current_directory}/../../usr/lib/x86_64-linux-musl \${current_directory}/../../usr/lib/x86_64-linux-musl/crt1.o \${current_directory}/../../usr/lib/x86_64-linux-musl/crti.o \${current_directory}/../../usr/lib/x86_64-linux-musl/crtn.o -lc
            EOF
            )
            (cat <<EOF > ./exodus.c
            #include <libgen.h>
            #include <stdlib.h>
            #include <string.h>
            #include <unistd.h>

            int main(int argc, char *argv[]) {
                char buffer[4096] = { 0 };
                if (readlink("/proc/self/exe", buffer, sizeof(buffer) - 25)) {
                    char *current_directory = dirname(buffer);
                    int current_directory_length = strlen(current_directory);

                    char python[4096] = { 0 };
                    strcpy(python, current_directory);
                    strcat(python, "/usr/bin/python");

                    char exodus[4096] = { 0 };
                    strcpy(exodus, current_directory);
                    strcat(exodus, "/usr/local/bin/exodus");

                    char **combined_args = malloc(sizeof(char*) * (argc + 2));
                    combined_args[0] = python;
                    combined_args[1] = exodus;
                    memcpy(combined_args + 2, argv + 1, sizeof(char*) * (argc - 1));
                    combined_args[argc + 1] = NULL;

                    char *envp[2];
                    char pythonpath[4096] = { 0 };
                    strcpy(pythonpath, "PYTHONPATH=");
                    strcat(pythonpath, current_directory);
                    strcat(pythonpath, "/usr/local/lib/python2.7/");
                    envp[0] = pythonpath;

                    envp[1] = NULL;

                    execve(python, combined_args, envp);
                }

                return 1;
            }
            EOF
            )
            sudo cp exodus.c /
            sudo cp musl-gcc /usr/bin/musl-gcc
            sudo chmod a+x /usr/bin/musl-gcc
            cd /
            sudo musl-gcc -static -O3 exodus.c -o exodus
            export LD_LIBRARY_PATH=/usr/local/lib/:/lib/x86_64-linux-gnu/:${LD_LIBRARY_PATH}
            strace -f /usr/bin/python /usr/local/bin/exodus -q /usr/bin/python "print 'hello world'" -o /dev/null 2>&1 | sudo exodus ./exodus --add /usr/local/lib/python2.7/dist-packages/exodus_bundler/ --add /usr/lib/x86_64-linux-musl/ --no-symlink /usr/local/lib/python2.7/dist-packages/exodus_bundler/templating.py --no-symlink /usr/local/lib/python2.7/dist-packages/exodus_bundler/launchers.py --add /usr/lib/x86_64-linux-musl/ --no-symlink /usr/bin/musl-gcc --tar --output /home/circleci/exodus/exodus-x64.tgz
            strace -f /usr/bin/python /usr/local/bin/exodus -q /usr/bin/python "print 'hello world'" -o /dev/null 2>&1 | sudo exodus ./exodus --add /usr/local/lib/python2.7/dist-packages/exodus_bundler/ --no-symlink /usr/local/lib/python2.7/dist-packages/exodus_bundler/templating.py --no-symlink /usr/local/lib/python2.7/dist-packages/exodus_bundler/launchers.py --no-symlink /usr/bin/musl-gcc --output /home/circleci/exodus/exodus-x64.sh
      - store_artifacts:
          path: htmlcov
          destination: coverage-report
      - store_artifacts:
          path: exodus-x64.sh
          destination: exodus-x64.sh
      - store_artifacts:
          path: exodus-x64.tgz
          destination: exodus-x64.tgz

      - persist_to_workspace:
          root: ~/exodus
          paths:
            - .env
            - dist

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/exodus
      - run:
          name: Upload package to PyPI.
          command: |
            . .env/bin/activate
            twine upload --skip-existing dist/*


workflows:
  version: 2

  build:
    jobs:
      - build:
          filters:
            tags:
              ignore: /v[0-9]+(\.[0-9]+)*/

  release:
    jobs:
      - build:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
          requires:
            - build
